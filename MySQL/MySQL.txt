.Challenge 1 :

CREATE DATABASE schoolDB;
USE schoolDB;
SHOW DATABASES;

. Challenge 2 :

USE schoolDB;

CREATE TABLE teachers (
    ->     id INT PRIMARY KEY,
    ->     first_name VARCHAR(255),
    ->     last_name VARCHAR(255),
    ->     subject VARCHAR(255)
    -> );

SHOW TABLES;
DESCRIBE teachers;

 INSERT INTO teachers(id, first_name, last_name, subject)
    -> VALUES
    ->     (1, 'John', 'Doe', 'Math'),
    ->     (2, 'Jane', 'Smith', 'Science');

 DESCRIBE teachers;  

 .Challenge 3 :

 SELECT * FROM teachers;
 SELECT first_name, subject FROM teachers;

.Challenge 4 :

CREATE TABLE students(
    ->     id INT PRIMARY KEY,
    ->     first_name VARCHAR(50),
    ->     last_name VARCHAR(50),
    ->     teacher_id INT
    -> );

INSERT INTO students(id, first_name, last_name, teacher_id)
    -> VALUES (1, 'Alice', 'Brown', 1),
    ->        (2, 'Bob', 'Johnson', 2);

a) INNER JOIN: 

 SELECT students.first_name AS student_first_name, students.last_name AS student_last_name,
    ->        teachers.first_name AS teacher_first_name, teachers.last_name AS teacher_last_name
    -> FROM students
    -> INNER JOIN teachers ON students.teacher_id = teachers.id;

b) LEFT OUTER JOIN:

SELECT students.first_name AS student_first_name, students.last_name AS student_last_name,
    ->        teachers.first_name AS teacher_first_name, teachers.last_name AS teacher_last_name
    -> FROM students
    -> LEFT JOIN teachers ON students.teacher_id = teachers.id;


c) RIGHT OUTER JOIN:

SELECT students.first_name AS student_first_name, students.last_name AS student_last_name,
    ->        teachers.first_name AS teacher_first_name, teachers.last_name AS teacher_last_name
    -> FROM students
    -> RIGHT JOIN teachers ON students.teacher_id = teachers.id;


d) FULL OUTER JOIN:

SELECT students.first_name AS student_first_name, students.last_name AS student_last_name,
    ->        teachers.first_name AS teacher_first_name, teachers.last_name AS teacher_last_name
    -> FROM students
    -> LEFT JOIN teachers ON students.teacher_id = teachers.id
    -> UNION ALL
    -> SELECT students.first_name AS student_first_name, students.last_name AS student_last_name,
    ->        teachers.first_name AS teacher_first_name, teachers.last_name AS teacher_last_name
    -> FROM students
    -> RIGHT JOIN teachers ON students.teacher_id = teachers.id;


.Challenge 5 :

 CREATE TABLE Authors (
    ->    author_id INT AUTO_INCREMENT PRIMARY KEY,
    ->    full_name VARCHAR(100),
    ->    birthdate DATE
    -> );

 CREATE TABLE Publishers (
    ->    publisher_id INT AUTO_INCREMENT PRIMARY KEY,
    ->    name VARCHAR(100)
    -> );

 CREATE TABLE Books (
    ->    book_id INT AUTO_INCREMENT PRIMARY KEY,
    ->    title VARCHAR(100),
    ->    author_id INT,
    ->    publisher_id INT,
    ->    FOREIGN KEY (author_id) REFERENCES Authors(author_id),
    ->    FOREIGN KEY (publisher_id) REFERENCES Publishers(publisher_id)
    -> );

     SHOW TABLES;

     

